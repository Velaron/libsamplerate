name: build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        name: [
        linux-cmake,
        linux-autotools,
        windows-cmake
        ]
        include:
          - name: linux-cmake
            os: ubuntu-latest
            build-system: cmake

          - name: linux-autotools
            os: ubuntu-latest
            build-system: autotools
            configure-options: --enable-sndfile --enable-alsa

          - name: windows-cmake
            os: windows-latest
            build-system: cmake
            configure-options: -DCMAKE_TOOLCHAIN_FILE=c:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2

    - name: Install Linux dependencies
      if: startsWith(matrix.os,'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install -y libsndfile-dev libopus-dev libfftw3-dev libasound2-dev

    - name: Install Windows dependencies
      if: startsWith(matrix.os,'windows')
      run: |
        vcpkg install libsndfile opus fftw3

    - name: Create CMake Build Environment
      if: startsWith(matrix.build-system,'cmake')
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      if: startsWith(matrix.build-system,'cmake')
      working-directory: ${{runner.workspace}}/build
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{matrix.configure-options}}

    - name: Build CMake
      if: startsWith(matrix.build-system,'cmake')
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}}

    - name: Test CMake
      if: startsWith(matrix.build-system,'cmake')
      working-directory: ${{runner.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Bootstrap Autotools
      if: startsWith(matrix.build-system,'autotools')
      run: ./autogen.sh

    - name: Configure Autotools
      if: startsWith(matrix.build-system,'autotools')
      run: ./configure ${{matrix.configure-options}}

    - name: Build Autotools
      if: startsWith(matrix.build-system,'autotools')
      run: make

    - name: Test Autotools
      if: startsWith(matrix.build-system,'autotools')
      run: make distcheck
